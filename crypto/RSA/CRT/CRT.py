from fractions import Fraction

def GCD(number1, number2):
	if number1 == 0:
		return number2
	if number2 == 0:
		return number1
	if number1 == number2:
		return number1
	if number1 > number2:
		return GCD(number1 - number2, number2)
	return GCD(number1, number2 - number1)

def Inverse(number, modulo):
	number %= modulo
	'''
	comment this if u sure that GCD(number, modulo) = 1
	
	if GCD(int(number), int(modulo)) != 1:
		return 0;
	'''

	x0, y0, x1, y1 = 0, 1, 1, 0
	while True:
		q, r = modulo // number, modulo % number
		x0, x1 = x1, x0 - q * x1
		y0, y1 = y1, y0 - q * y1

		if r == 0:
			break

		modulo, number = number, r

	return (x0, y0)

def CRT(nList, cList):
	if len(nList) != len(cList):
		print('Length of N and C invalid')
		return
	elif len(nList) == 0:
		print('Empty')
		return

	N = 1
	Sum = 0
	for n in nList:
		N *= n

	for i in range(len(cList)):
		Ni = Fraction(N, nList[i])
		Inv = Inverse(Ni, nList[i])[0]
		if Inv < 0:
			Inv += nList[i]

		Sum += cList[i] * Ni * Inv

	return (int(Sum % N), len(cList))

nList = [18827278693155835615396861889559022701108675792863039231761898047042137365166298541279110371110586793752286601363990971114718182883657085635140526429904116922945117327620019255967211486364833943192189744036282220541135163625232522723046001921248218727216614662154613200411582293673963294836397849135432459616789997074839038860502723288584927229603024236366727807753995703301672219224250594771586322837054834194486640725152186258993012937231923608430425005573161312365490924086157757212478693962951582782498318694329523010693394467508710100084112017139475643627901012475579682646887951685274368783554713393486768013289, 12852127262015419951360594338952118607985873105452993609990630158416550731337288692767423753620589038068586059003132369418714669116792277469565662186052835275101380604980214655663323558860082996087363190397397845948621132392774149983041102811098604731305714365702500964964097778315223679272855391459519699416071493519735346647292889813587341772848630708944777543672533727561588650636513800975733572296603789082302287004255193039048590171828194932310590456331100407651512075880721556153940618977176725560434910284821158347134346678224561405810508536977415308282956102715727608915822640888021375841628269466160266899467, 13038652770645235417702025649682762840212061397126551367937646583801992388225053705237020864207965396745747135220418209293236764950706442295977675123254413780531796993581846226766518790209743875820259285176217433049039238066445727730575778289281000626020159772326769854719660400274933039673935836436339909830739909782464529104909235643084806414990528729875074722828515657495472341857220523419124357642473635071994023036454149649569621884862601477088665859627654639005597898817061527764118312552456865730388314509460556143443036876822216740243809153587679372093205328016308874027910242002794925688171562711542265452001, 18356480944492733996629151478435960121845131694575280091776278994714323370859451879497646512961590625534206708109032108345830125638058366611543665103558104706088711709530994883708549975928033751108279112417518822849260413854898939584731980988917379047747178968168826907290474545498359337557083822554082037681453918555745750599643377184803635043751115647483673514844581052482917833602469539722748896248183240099527466272514817781513391024805670933352187917417508169358396856756661071368417809103830827892085965374189046617692263250764026786040811530838942686212355461401142983931000793412243250224594513285354098528047, 11992153618109209199211202450145814267008607992848365484604084976566721146742081229696280187638049929492961002323900690065280401707669013151075606322231922949479250963011773397104313272963720879468215156801081134995014140623163551989759019111805100649479318365349675442476624450291381524679320387174543002814329010936143114742329061769495155850494934196274712627354886756451999098662308176900835705612052085863088617879137868253760929997998025409329282583068697441397617640271624112064129520470573463155034730881867410323103292888532463675872603112239869037269454647694949391091120019503195760557502395870199477909381, 22832284101003623321084570888443581518475785063766049383524869836792073146718957472160212613138991400774329572782194463008695169526574449632301786613964300577151598469144288138240799866162448424876283624825291223560531209644669625882322745112063407358473296862393314770966747336981732513630670762563358371720795883805660154199778504887618918751429215243215965869363232355791580415674384470073834949307595920993837685426471641115944726728350297414817509905456139743854440165744252499675238840493250279388941098686626946454151384782104267378747199821323883635101681071612667615223317343514117856073170332147408164145937, 16407550756993203827478200400643551760984586670028250102192280149687190525783934550832158878721336594801750636415001616549862718592348727109830196702049302333855573422698063727016151029033497412233327996371453957576420264461852604016747357749172808094116174292012593325777735868143555595223069193283388860191100209347311583302909494036933784588201471063533261731448871715338548349160683404786316587612467777252972331661437261338956549091872501794729033772044365185476705771663404392377846517210258643621339040742747724336416895679692440901784905204611508232775055017869371128304671951621365960819024676262246941187547]
cList = [14386221288434375155296395804435805394496744716251438837249801129713825631250173259256970941651085431803325203046380760255010470997792931736657980443335663127105617304003365213923617430628551093131552730689768142936350052468065197969419085724599999867470427428879100723015553445231478059073896053104712732353994718593806934102667509692006381824724770408403934514057109987787570495704758815454037617459129487314836399918719430267529748362390790168208805098591939305839858332996043932766818336499372678223242633030339388679696849640159691956943430255854580730247967915444332020833952059040371584829105335778185212130891,
7967763966651701389313488886321311573336588799017128736303965709956974946338125959182643315568065418794486430751834317127361703232168820970663194147790572119628535493796558716001792072372896402585664362582361497948255333152857354111676823295609636923052748508126748716427285827483426476604104875935246520329665551085166401604234989147277173624246787233755644589903094205624619494304611090760424284735771541859823403794677578617315735458468780619523342741040474482309847139056923594061013349022231722555035070324262110185662413815485080841990409242681441104973254262580395634937383093905672792088787728345802052282650,
12687719721067680352466047152222385928776868304056803932219600610259248926312859024960621784949152263043178291489144283495368587709539099554177516941639208258503160876900017387441736675489085094111478262572595740321636552946090625533761857150459954565637682612410742164706255686238941957220073012328702440092403288938623295077141085426785215089584737723044568952143283652333884620830214536844065328153886420023042821901591530974147350565228616254211311097233897674025483190692982303705807702236973881610161398743228034868197540813236316685938122606110277154497465914815498888951040537322652362473254999476386853551148,
6847784389397053398390171042740937072610628537339215548681205216645772248724134010474538603136127480820211477213612258049025697383499080447328333376298031045612253951658860386561657004833911907339264885450949702123231704366191603476501861426505820291588007569892046077102521969564931947728187883043760469670740497858430990746819628866835145736211772054821717868151862111163506665151110147917547068894144214318427734613989514806278252961270068310906042414914721179552287289303715447651942563128685063007938261492474626766691708392674393558917095163554470067968003896631449142301197038654613913951996718606040714734801,
432605289894106623298430357831994617925732142236988142219149825263251354000673784387317472511307223889776735070382018255336188036127520127347807744123886819393870370860914249097852055994527425653373508554988463737548828375640050254807579716516089750346864587486370021750188059298943114753915581644548334385024897103979091867163943237897154252912608519808438513507361019852339866961007557235676172355767291934312410014560989394155874899164579568544549973529953842586008533506132381357216222664545954837499010479453579478880889198492541934993937661641469232835375347641660666057827729851685151400305108834683590667083,
6053559829451421386694662491714939669240864648273011713990493360443383948932121869831312322712502691168313774084453269481958744017695368733799960272643149004795421961633767838805334051418596251442020596485552280037777877507014279364110568988242108465547273255292147811552530454275872121328923697907233518446430943264199285439717503102079316435613970317799734428761669244302396030871189721494797811894325680606857024748375315514302599904893714397520662409514974366133609300112559359128369552541887662451303896200932806088587896751226942366256200843266908834719207163407190959350539093585192823922880572769345692575126,
8214695994819009353844351813751046452781742337248607445126621825695191792572569644429497683404119885509574261030808274570404193059653784905033252850949801098889664480180412239354901599905449309395543565428617798523180326907094567949532449285993048900283396596181095134568192695494402315556944650117231204394723359210746515209477714626066020235317181397582330724033418908840459301533650955166593570628201522084730095555004270972740612204181696502654066311100552022324885914876738207754469627890631195505868565625618973249481968724371338200816873287559420516924729234871224849370897667239874461222682126200540503763234]

print(CRT(nList, cList))